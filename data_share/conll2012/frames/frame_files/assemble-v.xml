<!DOCTYPE frameset SYSTEM "frameset.dtd">
<frameset>
    <predicate lemma="assemble">
        
        
        <roleset framnet="Creating  Building" id="assemble.01" name="build" vncls="26.1">
            <roles>
                <role descr="builder" f="" n="0">
                    
                    <vnrole vncls="26.1" vntheta="agent"/>
                </role>
                
                <role descr="construction" f="" n="1">
                    
                    <vnrole vncls="26.1" vntheta="product"/>
                </role>
                
                <role descr="material, start state" f="" n="2">
                    
                    <vnrole vncls="26.1" vntheta="material"/>
                </role>
                
                <role descr="end state" f="" n="4">
                    <vnrole vncls="26.1" vntheta="product"/>
                </role>
                
                <note>Might be hard to get both start and end state in a single example.
                    But who knows?
                </note>
            </roles>
            
            <example name="basic frame, no start/end states" src="" type="">
                <text>[The Dearborn, Mich., auto maker]-1 ran a loss of $37 million on
                    *trace*-1 assembling and marketing cars in the U.S.
                </text>
                <arg f="" n="0">*trace*-1</arg>
                <rel f="">assembling</rel>
                <arg f="" n="1">cars</arg>
                <arg f="loc" n="m">in the U.S.</arg>
                
                <note/>
            </example>
            
            <example name="with start state" src="" type="">
                <text>John assembles miniature ships out of toothpicks.</text>
                <arg f="" n="0">John</arg>
                <rel f="">assembles</rel>
                <arg f="" n="1">miniature ships</arg>
                <arg f="" n="2">out of toothpicks</arg>
                
                <note/>
            </example>
            
            
            
            
            <note>Frames file for 'assemble' based on sentences in financial
                subcorpus.  Verbnet class build-26.1.
            </note>
        </roleset>
        
        <roleset framnet="Gathering_up  Congregating" id="assemble.02" name="group" vncls="47.5.2">
            <roles>
                <role descr="agent, entity causing some grouping" f="" n="0">
                    
                    <vnrole vncls="47.5.2" vntheta="agent"/>
                </role>
                
                <role descr="theme, thing being included in some group" f="" n="1">
                    
                    <vnrole vncls="47.5.2" vntheta="theme"/>
                </role>
                
                <role descr="group" f="" n="2"/>
                
                <note>That could go either way; avoid using Arg2 unless both Arg1 and Arg2
                    are explicit.
                </note>
            </roles>
            
            <example name="no group" src="" type="">
                <text>Commodore has assembled an experienced management team.</text>
                <arg f="" n="0">Commodore</arg>
                <rel f="">assembled</rel>
                <arg f="" n="1">an experienced management team</arg>
                
                <note/>
            </example>
            
            
            
            <example name="both theme and group" src="" type="">
                <text>John assembled his dirty socks into a formidable (and smelly) pile.</text>
                <arg f="" n="0">John</arg>
                <rel f="">assembled</rel>
                <arg f="" n="1">his dirty socks</arg>
                <arg f="" n="2">into a formidable (and smelly) pile</arg>
                
                <note/>
            </example>
            
            
            <note>VerbNet class herd-47.5.2.</note>
        </roleset>
        
        <note/>
    </predicate>
    
    <note/>
</frameset>
